[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thetadata"
version = "0.1.0"
description = "Python client for ThetaData API - REST and streaming market data"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "ThetaData Client Contributors", email = "support@thetadata.com"}
]
keywords = ["thetadata", "market-data", "options", "stocks", "streaming", "websocket", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = [
    "requests>=2.28.0",
    "websockets>=10.0",
    "pydantic>=2.0",
    "httpx>=0.24.0",
    "tenacity>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10.0",
    "mypy>=1.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.2.0",
    "twine>=4.0",
    "build>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/thetadata/thetadata-python"
Documentation = "https://thetadata-python.readthedocs.io"
Repository = "https://github.com/thetadata/thetadata-python"
Issues = "https://github.com/thetadata/thetadata-python/issues"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "W",  # pycodestyle warnings
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
]
ignore = ["E501"]  # line too long

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--strict-markers --tb=short"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["thetadata"]
omit = ["*/tests/*", "*/docs/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.setuptools.packages.find]
include = ["thetadata*"]
exclude = ["tests*", "PRPs*", "docs*", "examples*"]